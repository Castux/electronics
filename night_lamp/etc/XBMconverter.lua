--[[
There is a nice image converter at https://tech.biko.pub/tool#/xbm
However, the Lua it outputs relies on concatenating many short strings
which causes the NodeMCU to run out of memory.

So we need to do that ahead of time.

1. Copy the output of the tool below, specifically the assignment to `img_data`
2. Run this script: `lua XBMconverter.lua`
3. Copy the string it outputs into your images.lua

--]]

local img_data = '' ..
  string.char(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00) ..
  string.char(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00) ..
  string.char(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00) ..
  string.char(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00) ..
  string.char(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00) ..
  string.char(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00) ..
  string.char(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00) ..
  string.char(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00) ..
  string.char(0x00,0x00,0x03,0x00,0x18,0x00,0x80,0x01,0x42,0x00,0x00,0x03,0x00,0x00,0x00,0x00) ..
  string.char(0x00,0x00,0x03,0x00,0x0c,0x00,0x80,0xe0,0xff,0x07,0x07,0x03,0x00,0x00,0x03,0x00) ..
  string.char(0x00,0x00,0x03,0x00,0xfc,0xff,0xc7,0x1f,0xf7,0x00,0x3c,0x03,0x00,0x80,0x01,0x00) ..
  string.char(0x00,0xfe,0xff,0x03,0x06,0x00,0xc0,0x1f,0x42,0x00,0x30,0x03,0x00,0xc0,0x00,0x00) ..
  string.char(0x00,0x06,0x03,0x03,0x03,0x00,0x60,0xc2,0xef,0x83,0x00,0x03,0x00,0xe0,0x00,0x00) ..
  string.char(0x00,0x02,0x03,0x83,0xfb,0xff,0x61,0xc2,0x2c,0xc2,0x03,0x01,0x00,0x70,0x00,0x00) ..
  string.char(0x00,0x06,0x03,0xc3,0x01,0x00,0x00,0xc2,0x2c,0x03,0x0e,0x01,0x00,0x78,0x00,0x00) ..
  string.char(0x00,0xfe,0xff,0xc3,0x00,0x00,0xe0,0xff,0xe7,0x03,0x0c,0x01,0x00,0xfc,0x3f,0x00) ..
  string.char(0x00,0x06,0x07,0x03,0xfe,0x7f,0xc0,0x1f,0x33,0x00,0x80,0x01,0x00,0xff,0x1f,0x00) ..
  string.char(0x00,0x02,0x03,0x03,0x00,0x60,0x00,0x82,0xff,0xe3,0xff,0xff,0x83,0xff,0x07,0x00) ..
  string.char(0x00,0x06,0x03,0x03,0x00,0x60,0x40,0xd2,0xff,0x03,0xc0,0x01,0x00,0xc0,0x03,0x00) ..
  string.char(0x00,0xfe,0xff,0x03,0x00,0x60,0x40,0xf2,0x31,0x00,0xc0,0x00,0x00,0xc0,0x01,0x00) ..
  string.char(0x00,0xfe,0xff,0x03,0x00,0x60,0x40,0xf2,0xff,0x01,0xc0,0x02,0x00,0x60,0x00,0x00) ..
  string.char(0x00,0x02,0x03,0x04,0x00,0x40,0x40,0x92,0x31,0x00,0x60,0x0f,0x00,0x30,0x00,0x00) ..
  string.char(0x00,0x00,0x03,0x0c,0x00,0xc0,0x44,0x96,0xff,0x03,0x38,0x3c,0x00,0x18,0x00,0x00) ..
  string.char(0x00,0x00,0x03,0x0c,0x00,0xc0,0xc4,0x9f,0x31,0x00,0x1e,0xf0,0x00,0x0c,0x00,0x00) ..
  string.char(0x00,0x00,0xff,0x07,0x00,0x80,0x05,0x90,0xff,0xc7,0x07,0xc0,0x01,0x04,0x00,0x00) ..
  string.char(0x00,0x00,0xfe,0x07,0x00,0x80,0x07,0x80,0x01,0xe0,0x01,0x00,0x01,0x00,0x00,0x00) ..
  string.char(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00) ..
  string.char(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00) ..
  string.char(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00) ..
  string.char(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00) ..
  string.char(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00) ..
  string.char(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00)

io.write '"'
for i = 1,#img_data do
	local byte = string.byte(img_data:sub(i,i))
	io.write(string.format("\\%03d", byte))
end
print '"'
